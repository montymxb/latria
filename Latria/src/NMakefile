################################
## Latria NMakefile (Windows) ##
################################

################
#### MACROS ####
################

DEBUG_FLAGS = -DLAT_TESTS=1 /DEBUG

#Generic Include Compiler Flag
INCLUDE_COMPILER_FLAG = -DINCLUDECOMPILER=1

#Extra flags for cl, suppresses copyright and optimizes for speed
CL_EXTRA_FLAGS = /nologo /O2

#Extra flags for the linker
LINK_EXTRA_FLAGS = /NOLOGO

######################
#### Object Files ####
######################

#Interpreter Debug Object Files
I_OBJS = Latria_Function.obj Latria_GarbageCollection.obj Latria_Lexical.obj Latria_Libs.obj Latria_Math.obj Latria_Operators.obj Latria_ReferenceStack.obj Latria_Sys.obj Latria_Vars.obj Latria.obj Latria_OPCodes.obj Latria_Regex.obj Latria_Jumps.obj Latria_IO.obj Latria_Tests.obj

#Compiler Object Files
C_OBJS = Latria_C_IO.obj Latria_C_Lexical.obj Latria_C_Libs.obj Latria_C_OpCodes.obj Latria_C_StateStack.obj Latria_Compiler.obj Latria_Compiler_Interface.obj Latria_C_Dup_Libs.obj

#Embedded Compiler Object Files
C_E_OBJS = Latria_C_IO.obj Latria_C_Lexical.obj Latria_C_Libs.obj Latria_C_OpCodes.obj Latria_C_StateStack.obj Latria_Compiler_Interface.obj

#disassembler objs
DIS_OBJ = Latria_Decompiler.obj

#disassembler name
D_NAME = latriad.exe

#interpreter name
I_NAME = latria.exe

#compiler name
C_NAME = latriac.exe

#linker
LINK = link

#NMake Invocation
NMAKE_INVOCATION = nmake /F NMakeFile

#################
#### TARGETS ####
#################

#build interpreter-compiler & disassembler
all: latria disassembler

.c.obj:
	$(CC) /c $(CDEBUG) $(COMP_FLAGS) $(CL_EXTRA_FLAGS) $(CFLAGS) $(CVARS) $*.c
	
#basic build for interpreter-compiler
interpreter-compiler: $(I_OBJS) $(C_E_OBJS)
	$(LINK) $(LINK_EXTRA_FLAGS) $(LDEBUG) $(CONFLAGS) $** $(CONLIBS) -out:$(I_NAME)
	
#interpreter-compiler
latria:
	$(NMAKE_INVOCATION) interpreter-compiler COMP_FLAGS="$(INCLUDE_COMPILER_FLAG) $(DEBUG_FLAGS)"
	
#interpreter-compiler debug
latria-debug:
	$(NMAKE_INVOCATION) interpreter-compiler COMP_FLAGS="$(INCLUDE_COMPILER_FLAG) $(DEBUG_FLAGS)"
	
#only interpreter
interpreter: $(I_OBJS)
	$(LINK) $(LINK_EXTRA_FLAGS) $(LDEBUG) $(CONFLAGS) $** $(CONLIBS) -out:$(I_NAME)
	
#only interpreter debug
interpreter-debug:
	$(NMAKE_INVOCATION) interpreter COMP_FLAGS="$(DEBUG_FLAGS)"

#only compiler
compiler: $(C_OBJS)
	$(LINK) $(LINK_EXTRA_FLAGS) $(LDEBUG) $(CONFLAGS) $** $(CONLIBS) -out:$(C_NAME)
	
#only compiler debug
compiler-debug:
	$(NMAKE_INVOCATION) compiler COMP_FLAGS=$(DEBUG_FLAGS)
	
#disassembler
disassembler: $(DIS_OBJ)
	$(LINK) $(LINK_EXTRA_FLAGS) $(LDEBUG) $(CONFLAGS) $** $(CONLIBS) -out:$(D_NAME)
	
#disassembler debug
disassembler-debug:
	$(NMAKE_INVOCATION) disassembler COMP_FLAGS=$(DEBUG_FLAGS)

#clean
clean: 
	del *.obj
	del *.exe
	
#help
help:
	@echo ::Supported Targets::
	@echo all
	@echo latria
	@echo latria-debug
	@echo interpreter
	@echo interpreter-debug
	@echo compiler
	@echo compiler-debug
	@echo disassembler
	@echo disassembler-debug
